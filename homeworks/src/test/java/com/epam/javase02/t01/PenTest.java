package com.epam.javase02.t01;

import org.junit.Test;

import static org.junit.Assert.*;
import static org.hamcrest.core.Is.is;

/**
 * Created by Freemind on 2016-09-06.
 */
public class PenTest {

    @Test
    public void testDefaultConstructor()
    {
        Pen defaultPen=new Pen();
        assertThat(defaultPen.getManufacturerName(),is("Noname"));
        assertThat(defaultPen.getPenColor(),is(Color.BLACK));
        assertThat(defaultPen.getPenPasteColor(),is(Color.BLACK));
    }

    @Test
    public void testEqualsContract()
    {
        Pen pen1=new Pen();
        Pen pen2=new Pen();
        //1 reflexive
        assertTrue(pen1.equals(pen1));
        //1 simmetry
        assertTrue(pen1.equals(pen2));
        assertTrue(pen2.equals(pen1));
        //2 null
        assertFalse(pen1.equals(null));
    }

    @Test
    public void testHashCode()  {
        Pen pen1=new Pen();
        Pen pen2=new Pen();
        assertTrue(pen1.hashCode()==pen2.hashCode());
    }

    @Test
    public void testConstructors() {
        Pen testPen=new Pen("Parker",11.0,Color.GREEN,Color.BLUE);
        assertThat(testPen.getPrice(),is(11.0));
        assertThat(testPen.getManufacturerName(),is("Parker"));
        assertThat(testPen.getPenColor(),is(Color.GREEN));
        assertThat(testPen.getPenPasteColor(),is(Color.BLUE));

        testPen=new Pen("BIG",12.0,Color.GREEN);
        assertThat(testPen.getPrice(),is(12.0));
        assertThat(testPen.getManufacturerName(),is("BIG"));
        assertThat(testPen.getPenColor(),is(Color.GREEN));
        assertThat(testPen.getPenPasteColor(),is(Color.BLACK));

        testPen=new Pen("BIG",13.0,Color.GREEN);
        assertThat(testPen.getPrice(),is(13.0));
        assertThat(testPen.getManufacturerName(),is("BIG"));
        assertThat(testPen.getPenColor(),is(Color.GREEN));
        assertThat(testPen.getPenPasteColor(),is(Color.BLACK));

        testPen=new Pen(14.0);
        assertThat(testPen.getPrice(),is(14.0));
        assertThat(testPen.getManufacturerName(),is("Noname"));
        assertThat(testPen.getPenColor(),is(Color.BLACK));
        assertThat(testPen.getPenPasteColor(),is(Color.BLACK));

    }


}